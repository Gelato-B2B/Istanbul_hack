{
  "address": "0x5C2b029C47020c08b00E0F0884bFE1f527C684Cb",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "usdcAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "validTo",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "uid",
              "type": "bytes"
            }
          ],
          "internalType": "struct intentBoost.Order",
          "name": "_order",
          "type": "tuple"
        }
      ],
      "name": "_hashOrder",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_interestRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_capital",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_loanDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_liquidationThreshold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_collateralRatio",
          "type": "uint256"
        },
        {
          "internalType": "address[]",
          "name": "_whitelist",
          "type": "address[]"
        }
      ],
      "name": "createLendingPool",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "validTo",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "uid",
              "type": "bytes"
            }
          ],
          "internalType": "struct intentBoost.Order",
          "name": "_order",
          "type": "tuple"
        }
      ],
      "name": "generateEIP712Hash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_orderHash",
          "type": "bytes32"
        }
      ],
      "name": "getEthSignedMessageHash",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "hash",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "invalidatedOrders",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "lendingPools",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "interestRate",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "capital",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidationThreshold",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "collateralRatio",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_marketID",
          "type": "uint256"
        }
      ],
      "name": "liquidate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "liquidationMarkets",
      "outputs": [
        {
          "internalType": "address",
          "name": "lender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "borrower",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "borrowedETH",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lockedColalteral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "loanDuration",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "liquidationPrice",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "lockUSDC",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextMarket",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "nextPoolId",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "poolBorrowers",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "collateral",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "lockedCollateral",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "_hash",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "recoverSigner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "marketId",
          "type": "uint256"
        }
      ],
      "name": "repay",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bool",
          "name": "_paused",
          "type": "bool"
        }
      ],
      "name": "setPaused",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "_usdcAddress",
          "type": "address"
        }
      ],
      "name": "setUSDCAddress",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "uint256",
              "name": "amountIn",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amountOut",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "validTo",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "maker",
              "type": "address"
            },
            {
              "internalType": "bytes",
              "name": "uid",
              "type": "bytes"
            }
          ],
          "internalType": "struct intentBoost.Order",
          "name": "_order",
          "type": "tuple"
        },
        {
          "internalType": "bytes",
          "name": "_signature",
          "type": "bytes"
        },
        {
          "internalType": "uint256",
          "name": "_poolID",
          "type": "uint256"
        }
      ],
      "name": "settlement",
      "outputs": [],
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "poolId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "withdrawAmount",
          "type": "uint256"
        }
      ],
      "name": "withdrawCapital",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "withdrawCollateral",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "stateMutability": "payable",
      "type": "receive"
    }
  ],
  "transactionHash": "0x4aa396c4c9b84e91e4aa15c5e79e82033370c4975cd4f50ef34aab224d6fc88b",
  "receipt": {
    "to": null,
    "from": "0x2906C294b3ad05189496f5d19853226D4ab3a9a2",
    "contractAddress": "0x5C2b029C47020c08b00E0F0884bFE1f527C684Cb",
    "transactionIndex": 0,
    "gasUsed": "1772687",
    "logsBloom": "0x
    "blockHash": "0xf3b0d5eba52bf1d6d9d32f71849724f258338f8bbfe1a60130a9d7b64e2f90e0",
    "transactionHash": "0x4aa396c4c9b84e91e4aa15c5e79e82033370c4975cd4f50ef34aab224d6fc88b",
    "logs": [
      {
        "transactionIndex": 0,
        "blockNumber": 3224083,
        "transactionHash": "0x4aa396c4c9b84e91e4aa15c5e79e82033370c4975cd4f50ef34aab224d6fc88b",
        "address": "0x5C2b029C47020c08b00E0F0884bFE1f527C684Cb",
        "topics": [
          "0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0",
          "0x0000000000000000000000000000000000000000000000000000000000000000",
          "0x0000000000000000000000002906c294b3ad05189496f5d19853226d4ab3a9a2"
        ],
        "data": "0x",
        "logIndex": 0,
        "blockHash": "0xf3b0d5eba52bf1d6d9d32f71849724f258338f8bbfe1a60130a9d7b64e2f90e0"
      }
    ],
    "blockNumber": 3224083,
    "cumulativeGasUsed": "1772687",
    "status": 1,
    "byzantium": true
  },
  "args": [
    "0x557278364B136a8D7686016b1930c8C7136d8af9"
  ],
  "numDeployments": 1,
  "solcInputHash": "d7b45d3c01a260d1b2ff87776d36cfe0",
  "metadata": "{\"compiler\":{\"version\":\"0.8.17+commit.8df45f5f\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"usdcAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validTo\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"uid\",\"type\":\"bytes\"}],\"internalType\":\"struct intentBoost.Order\",\"name\":\"_order\",\"type\":\"tuple\"}],\"name\":\"_hashOrder\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_capital\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_loanDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_liquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_collateralRatio\",\"type\":\"uint256\"},{\"internalType\":\"address[]\",\"name\":\"_whitelist\",\"type\":\"address[]\"}],\"name\":\"createLendingPool\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validTo\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"uid\",\"type\":\"bytes\"}],\"internalType\":\"struct intentBoost.Order\",\"name\":\"_order\",\"type\":\"tuple\"}],\"name\":\"generateEIP712Hash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_orderHash\",\"type\":\"bytes32\"}],\"name\":\"getEthSignedMessageHash\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"hash\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"invalidatedOrders\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"lendingPools\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"interestRate\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"capital\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationThreshold\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"collateralRatio\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_marketID\",\"type\":\"uint256\"}],\"name\":\"liquidate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"liquidationMarkets\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"borrower\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"borrowedETH\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockedColalteral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"loanDuration\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"liquidationPrice\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"lockUSDC\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextMarket\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"nextPoolId\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"poolBorrowers\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"collateral\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"lockedCollateral\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_hash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"recoverSigner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"marketId\",\"type\":\"uint256\"}],\"name\":\"repay\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bool\",\"name\":\"_paused\",\"type\":\"bool\"}],\"name\":\"setPaused\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_usdcAddress\",\"type\":\"address\"}],\"name\":\"setUSDCAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"amountIn\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amountOut\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"validTo\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"maker\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"uid\",\"type\":\"bytes\"}],\"internalType\":\"struct intentBoost.Order\",\"name\":\"_order\",\"type\":\"tuple\"},{\"internalType\":\"bytes\",\"name\":\"_signature\",\"type\":\"bytes\"},{\"internalType\":\"uint256\",\"name\":\"_poolID\",\"type\":\"uint256\"}],\"name\":\"settlement\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"poolId\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"withdrawAmount\",\"type\":\"uint256\"}],\"name\":\"withdrawCapital\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"stateMutability\":\"payable\",\"type\":\"receive\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/IntentBoost.sol\":\"intentBoost\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts (last updated v4.7.0) (access/Ownable.sol)\\n\\npragma solidity ^0.8.0;\\n\\nimport \\\"../utils/Context.sol\\\";\\n\\n/**\\n * @dev Contract module which provides a basic access control mechanism, where\\n * there is an account (an owner) that can be granted exclusive access to\\n * specific functions.\\n *\\n * By default, the owner account will be the one that deploys the contract. This\\n * can later be changed with {transferOwnership}.\\n *\\n * This module is used through inheritance. It will make available the modifier\\n * `onlyOwner`, which can be applied to your functions to restrict their use to\\n * the owner.\\n */\\nabstract contract Ownable is Context {\\n    address private _owner;\\n\\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\\n\\n    /**\\n     * @dev Initializes the contract setting the deployer as the initial owner.\\n     */\\n    constructor() {\\n        _transferOwnership(_msgSender());\\n    }\\n\\n    /**\\n     * @dev Throws if called by any account other than the owner.\\n     */\\n    modifier onlyOwner() {\\n        _checkOwner();\\n        _;\\n    }\\n\\n    /**\\n     * @dev Returns the address of the current owner.\\n     */\\n    function owner() public view virtual returns (address) {\\n        return _owner;\\n    }\\n\\n    /**\\n     * @dev Throws if the sender is not the owner.\\n     */\\n    function _checkOwner() internal view virtual {\\n        require(owner() == _msgSender(), \\\"Ownable: caller is not the owner\\\");\\n    }\\n\\n    /**\\n     * @dev Leaves the contract without owner. It will not be possible to call\\n     * `onlyOwner` functions anymore. Can only be called by the current owner.\\n     *\\n     * NOTE: Renouncing ownership will leave the contract without an owner,\\n     * thereby removing any functionality that is only available to the owner.\\n     */\\n    function renounceOwnership() public virtual onlyOwner {\\n        _transferOwnership(address(0));\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Can only be called by the current owner.\\n     */\\n    function transferOwnership(address newOwner) public virtual onlyOwner {\\n        require(newOwner != address(0), \\\"Ownable: new owner is the zero address\\\");\\n        _transferOwnership(newOwner);\\n    }\\n\\n    /**\\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\\n     * Internal function without access restriction.\\n     */\\n    function _transferOwnership(address newOwner) internal virtual {\\n        address oldOwner = _owner;\\n        _owner = newOwner;\\n        emit OwnershipTransferred(oldOwner, newOwner);\\n    }\\n}\\n\",\"keccak256\":\"0xa94b34880e3c1b0b931662cb1c09e5dfa6662f31cba80e07c5ee71cd135c9673\",\"license\":\"MIT\"},\"@openzeppelin/contracts/utils/Context.sol\":{\"content\":\"// SPDX-License-Identifier: MIT\\n// OpenZeppelin Contracts v4.4.1 (utils/Context.sol)\\n\\npragma solidity ^0.8.0;\\n\\n/**\\n * @dev Provides information about the current execution context, including the\\n * sender of the transaction and its data. While these are generally available\\n * via msg.sender and msg.data, they should not be accessed in such a direct\\n * manner, since when dealing with meta-transactions the account sending and\\n * paying for execution may not be the actual sender (as far as an application\\n * is concerned).\\n *\\n * This contract is only required for intermediate, library-like contracts.\\n */\\nabstract contract Context {\\n    function _msgSender() internal view virtual returns (address) {\\n        return msg.sender;\\n    }\\n\\n    function _msgData() internal view virtual returns (bytes calldata) {\\n        return msg.data;\\n    }\\n}\\n\",\"keccak256\":\"0xe2e337e6dde9ef6b680e07338c493ebea1b5fd09b43424112868e9cc1706bca7\",\"license\":\"MIT\"},\"contracts/IntentBoost.sol\":{\"content\":\"// SPDX-License-Identifier: GPL-3.0\\n\\npragma solidity 0.8.17;\\nimport \\\"@openzeppelin/contracts/access/Ownable.sol\\\";\\n\\ninterface IERC20 {\\n    function transferFrom(address sender, address recipient, uint256 amount) external returns (bool);\\n}\\n\\ninterface IChainlinkAggregator {\\n    function latestAnswer() external view returns (int256);\\n}\\n\\ncontract intentBoost is Ownable {\\n    bool public paused;\\n\\n    struct LendingPool {\\n        uint256 interestRate;\\n        uint256 capital; //in ETH\\n        uint256 loanDuration;\\n        uint256 liquidationThreshold;\\n        uint256 collateralRatio;\\n        address[] whitelist;\\n        address owner;\\n    }\\n\\n    struct borrowers {\\n        uint256 collateral;\\n        uint256 lockedCollateral;\\n    }\\n\\n    struct Order {\\n        uint256 amountIn;\\n        uint256 amountOut;\\n        uint256 validTo;\\n        address maker;\\n        bytes uid;\\n    }\\n\\n    struct liquidationMarket {\\n        address lender;\\n        address borrower;\\n        uint256 borrowedETH;\\n        uint256 lockedColalteral;\\n        uint256 loanDuration;\\n        uint256 liquidationPrice;\\n    }\\n\\n    address public lockUSDC;\\n\\n    mapping(uint256 => LendingPool) public lendingPools;\\n    mapping(address => borrowers) public poolBorrowers;\\n    mapping(bytes32 => bool) public invalidatedOrders;\\n    mapping(uint256 => liquidationMarket) public liquidationMarkets;\\n\\n    uint256 public nextPoolId;\\n    uint256 public nextMarket;\\n\\n    bytes32 immutable DOMAIN_SEPARATOR;\\n\\n    bytes32 constant EIP712DOMAIN_TYPEHASH = keccak256(\\n        \\\"EIP712Domain(string name,string version,uint256 chainId,address verifyingContract)\\\"\\n    );\\n\\n    bytes32 constant ORDER_TYPEHASH = keccak256(\\n        \\\"Order(uint256 amountIn,uint256 amountOut,address maker,bytes uid)\\\"\\n    );\\n\\n    constructor(address usdcAddress) {\\n        lockUSDC = usdcAddress;\\n        DOMAIN_SEPARATOR = keccak256(\\n            abi.encode(\\n                EIP712DOMAIN_TYPEHASH,\\n                keccak256(\\\"intentBoost\\\"), // contract name\\n                keccak256(\\\"1\\\"), // Version\\n                block.chainid,\\n                address(this)\\n            )\\n        );\\n    }\\n\\n//-----------------------------------------------------------------------------------------------------\\n//------Owner functions---------------------------------------------------------------------------------\\n//-----------------------------------------------------------------------------------------------------\\n    function setPaused(bool _paused) external onlyOwner {\\n        paused = _paused;\\n    }\\n\\n    function setUSDCAddress(address _usdcAddress) external onlyOwner {\\n        lockUSDC = _usdcAddress;\\n    }\\n\\n//-----------------------------------------------------------------------------------------------------\\n//------Main functions---------------------------------------------------------------------------------\\n//-----------------------------------------------------------------------------------------------------\\n\\n    function createLendingPool(\\n        uint256 _interestRate,\\n        uint256 _capital,\\n        uint256 _loanDuration,\\n        uint256 _liquidationThreshold,\\n        uint256 _collateralRatio,\\n        address[] memory _whitelist\\n    ) external payable {\\n        require(!paused, \\\"Contract is paused\\\");\\n        require(msg.value >= _capital, \\\"Not enough ETH provided\\\");\\n        require(_liquidationThreshold <= 100, \\\"Punishment fee cannot exceed 100.\\\");\\n        require(_collateralRatio <= 100, \\\"Collateral ratio must be below 100.\\\");\\n        require(_collateralRatio >= 1, \\\"Collateral ratio must be higher than 1.\\\");\\n\\n        LendingPool memory newPool = LendingPool({\\n            interestRate: _interestRate,\\n            capital: _capital,\\n            loanDuration: _loanDuration,\\n            liquidationThreshold: _liquidationThreshold,\\n            collateralRatio: _collateralRatio,\\n            whitelist: _whitelist,\\n            owner: msg.sender\\n        });\\n\\n        lendingPools[nextPoolId] = newPool;\\n        nextPoolId++;\\n    }\\n\\n    function withdrawCapital(uint256 poolId, uint256 withdrawAmount) external {\\n        require(!paused, \\\"Contract is paused\\\");\\n        LendingPool storage pool = lendingPools[poolId];\\n        require(msg.sender == pool.owner, \\\"Only the pool owner can withdraw capital.\\\");\\n        require(withdrawAmount <= pool.capital, \\\"Withdrawl request exceeds pool amount.\\\");\\n        pool.capital -= withdrawAmount;\\n        payable(pool.owner).transfer(withdrawAmount);\\n    }\\n\\n    function depositCollateral(uint256 amount) public {\\n        require(!paused, \\\"Contract is paused\\\");\\n        require(amount > 0, \\\"Amount must be greater than 0\\\");\\n        IERC20 usdcToken = IERC20(lockUSDC);\\n        require(usdcToken.transferFrom(msg.sender, address(this), amount), \\\"Transfer failed.\\\");\\n        poolBorrowers[msg.sender].collateral += amount;\\n    }\\n\\n    function withdrawCollateral(uint256 amount) public {\\n        require(!paused, \\\"Contract is paused\\\");\\n        require(amount > 0, \\\"amount needs to be higher than zero\\\");\\n        require(poolBorrowers[msg.sender].collateral - poolBorrowers[msg.sender].lockedCollateral > amount, \\\"Not enough available collateral\\\");\\n        poolBorrowers[msg.sender].collateral -= amount;\\n        IERC20 usdcToken = IERC20(lockUSDC);\\n        require(usdcToken.transferFrom(address(this), msg.sender, amount), \\\"Transfer failed.\\\");\\n    }\\n\\n    //taker is calling the function\\n    function settlement(Order memory _order, bytes memory _signature, uint256 _poolID) external payable {\\n        //Checks\\n        bytes32 orderhash = _hashOrder(_order);\\n        address recsigner = recoverSigner(orderhash, _signature);\\n        require(recsigner == _order.maker, \\\"Ivalid signature\\\");\\n        uint256 collateral = _order.amountOut * lendingPools[_poolID].collateralRatio / 100;\\n        require(poolBorrowers[_order.maker].collateral - poolBorrowers[_order.maker].lockedCollateral >=\\n        collateral, \\\"Not enough collateral\\\");\\n\\n        //Invalidating the quote\\n        _invalidateOrder(orderhash);\\n\\n        //Recording borrowing\\n        recordBorrowing(_order, collateral, _poolID);\\n\\n        // swap\\n        payable(msg.sender).transfer(_order.amountOut);\\n        IERC20 usdcToken = IERC20(lockUSDC);\\n        require(usdcToken.transferFrom(msg.sender, address(this), _order.amountIn), \\\"Transfer failed.\\\");\\n    }\\n\\n\\n    function recordBorrowing(Order memory _order, uint256 _collalteral, uint256 _poolID) internal {\\n        liquidationMarkets[nextMarket].lender = msg.sender;\\n        liquidationMarkets[nextMarket].borrower = _order.maker;\\n        liquidationMarkets[nextMarket].borrowedETH = _order.amountIn;\\n        liquidationMarkets[nextMarket].lockedColalteral = _collalteral;\\n        liquidationMarkets[nextMarket].loanDuration = lendingPools[_poolID].loanDuration;\\n        liquidationMarkets[nextMarket].liquidationPrice = getEthUsdPrice() * lendingPools[_poolID].liquidationThreshold / 100;\\n\\n        poolBorrowers[_order.maker].lockedCollateral += _collalteral;\\n        nextMarket++;\\n    }\\n\\n    function liquidate(uint256 _marketID) external {\\n        require(msg.sender == liquidationMarkets[_marketID].lender, \\\"Only lenders can liquidate\\\");\\n        if (block.timestamp > liquidationMarkets[_marketID].loanDuration) {\\n            poolBorrowers[liquidationMarkets[_marketID].borrower].lockedCollateral -= liquidationMarkets[_marketID].lockedColalteral;\\n            IERC20 usdcToken = IERC20(lockUSDC);\\n            require(usdcToken.transferFrom(address(this), msg.sender, liquidationMarkets[nextMarket].lockedColalteral), \\\"Transfer failed.\\\");\\n            delete liquidationMarkets[nextMarket];\\n        }else {\\n            require(getEthUsdPrice() < liquidationMarkets[nextMarket].liquidationPrice, \\\"Liquidation threshold not breached\\\");\\n            poolBorrowers[liquidationMarkets[_marketID].borrower].lockedCollateral -= liquidationMarkets[_marketID].lockedColalteral;\\n            IERC20 usdcToken = IERC20(lockUSDC);\\n            require(usdcToken.transferFrom(address(this), msg.sender, liquidationMarkets[nextMarket].lockedColalteral), \\\"Transfer failed.\\\");\\n            delete liquidationMarkets[nextMarket];\\n        }\\n    }\\n\\n    function repay(uint256 marketId) external payable {\\n        liquidationMarket storage market = liquidationMarkets[marketId];\\n        require(msg.sender == market.borrower, \\\"Only the borrower can repay the loan\\\");\\n\\n        uint256 totalDue = market.borrowedETH;\\n\\n        require(msg.value >= totalDue, \\\"Insufficient amount to cover the loan\\\");\\n\\n        if (msg.value > totalDue) {\\n            payable(msg.sender).transfer(msg.value - totalDue);\\n        }\\n\\n        borrowers storage borrower = poolBorrowers[market.borrower];\\n        borrower.lockedCollateral -= market.lockedColalteral;\\n        delete liquidationMarkets[marketId];\\n\\n        IERC20 usdcToken = IERC20(lockUSDC);\\n        require(usdcToken.transferFrom(address(this), msg.sender, market.lockedColalteral), \\\"Collateral return failed\\\");\\n    }\\n\\n\\n\\n\\n\\n//----------------------------------------------------------------------------------------------------\\n//------Supplimentary functions-----------------------------------------------------------------------\\n//----------------------------------------------------------------------------------------------------\\n\\n    function _invalidateOrder(bytes32 _hash) internal {\\n        require(!invalidatedOrders[_hash], \\\"Invalid Order\\\");\\n        invalidatedOrders[_hash] = true;\\n    }\\n\\n   //hashes order data\\n    function _hashOrder(Order memory _order) public pure returns (bytes32) {\\n        return keccak256(abi.encode(\\n            ORDER_TYPEHASH,\\n            _order.amountIn,\\n            _order.amountOut,\\n            _order.maker,\\n            _order.uid\\n        ));\\n    }\\n\\n    //generates final hash including domain separator to be signed by maker from received order hash\\n    function getEthSignedMessageHash(bytes32 _orderHash)\\n        public\\n        view\\n        returns (bytes32 hash)\\n    {\\n        return keccak256(abi.encodePacked(\\n            \\\"\\\\x19\\\\x01\\\",\\n            DOMAIN_SEPARATOR,\\n            _orderHash\\n        ));\\n    }\\n\\n    //view function that can be called by test maker to generate hash that maker has to sign\\n    function generateEIP712Hash(Order memory _order) public view returns (bytes32) {\\n        return getEthSignedMessageHash(_hashOrder(_order));\\n    }\\n\\n    function recoverSigner(\\n        bytes32 _hash,\\n        bytes memory signature\\n    ) public view returns (address) {\\n        bytes32 r;\\n        bytes32 s;\\n        uint8 v;\\n        bytes32 messageHash = getEthSignedMessageHash(_hash);\\n\\n        assembly {\\n            r := mload(add(signature, 32))\\n            s := mload(add(signature, 64))\\n            v := byte(0, mload(add(signature, 96)))\\n        }\\n\\n        if (v < 27) {\\n            v += 27;\\n        }\\n\\n        return ecrecover(messageHash, v, r, s);\\n    }\\n\\n    function getEthUsdPrice() internal view returns(uint256) {\\n        // mainnet\\n        // address source = 0x5f4eC3Df9cbd43714FE2740f5E3616155c5b8419;\\n\\n        // sepoila\\n        // address source = 0x694AA1769357215DE4FAC081bf1f309aDC325306;\\n\\n        // goerli\\n        address source = 0xD4a33860578De61DBAbDc8BFdb98FD742fA7028e;\\n\\n        IChainlinkAggregator ethUsdPriceFeed = IChainlinkAggregator(source);\\n        int256 ethUsdPrice = ethUsdPriceFeed.latestAnswer();\\n        return uint256(ethUsdPrice);\\n    }\\n\\n    receive() external payable {}\\n\\n}\\n\",\"keccak256\":\"0x8b1c735d11e996f9578195939cf2a84b3bcb5e1035a38eaa77024e8a3f769a6f\",\"license\":\"GPL-3.0\"}},\"version\":1}",
  "bytecode": "0x60a06040523480156200001157600080fd5b5060405162001fca38038062001fca833981016040819052620000349162000153565b6200003f3362000103565b600180546001600160a01b0319166001600160a01b038316179055604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f022136dd19017ac94927db88ec8a5340ad372d41f6ca76a4a97df6dbe5c7a398918101919091527fc89efdaa54c0f20c7adf612882df0950f5a951637e0307cdcb4c672f298b8bc660608201524660808201523060a082015260c00160408051601f1981840301815291905280516020909101206080525062000185565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6000602082840312156200016657600080fd5b81516001600160a01b03811681146200017e57600080fd5b9392505050565b608051611e29620001a1600039600061150d0152611e296000f3fe60806040526004361061014f5760003560e01c80638da5cb5b116100b6578063bcee2d421161006f578063bcee2d42146104b3578063c3124c4d146104d3578063e880f7cd14610503578063ec21386514610516578063f2fde38b1461052c578063fa5408011461054c57600080fd5b80638da5cb5b146103e15780638e96066f146104135780638f07e7f71461043357806397aba7f914610453578063aaf5bfc314610473578063bad4a01f1461049357600080fd5b80634c88bc95116101085780634c88bc951461028a5780635c975abb1461029d578063605300e7146102ce5780636112fe2e14610317578063715018a6146103375780638a9ad7661461034c57600080fd5b80630658f4951461015b57806316c38b3c146101f157806318e5613114610213578063370bad1114610237578063371fd8e614610257578063415f12401461026a57600080fd5b3661015657005b600080fd5b34801561016757600080fd5b506101b6610176366004611873565b600260208190526000918252604090912080546001820154928201546003830154600484015460069094015492949391929091906001600160a01b031686565b60408051968752602087019590955293850192909252606084015260808301526001600160a01b031660a082015260c0015b60405180910390f35b3480156101fd57600080fd5b5061021161020c36600461189a565b61056c565b005b34801561021f57600080fd5b5061022960065481565b6040519081526020016101e8565b34801561024357600080fd5b50610229610252366004611a25565b610592565b610211610265366004611873565b6105a6565b34801561027657600080fd5b50610211610285366004611873565b610819565b610211610298366004611a5a565b610a87565b3480156102a957600080fd5b506000546102be90600160a01b900460ff1681565b60405190151581526020016101e8565b3480156102da57600080fd5b506103026102e9366004611b38565b6003602052600090815260409020805460019091015482565b604080519283526020830191909152016101e8565b34801561032357600080fd5b50610211610332366004611873565b610ce2565b34801561034357600080fd5b50610211610e93565b34801561035857600080fd5b506103a9610367366004611873565b60056020819052600091825260409091208054600182015460028301546003840154600485015494909501546001600160a01b03938416959290931693909286565b604080516001600160a01b039788168152969095166020870152938501929092526060840152608083015260a082015260c0016101e8565b3480156103ed57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016101e8565b34801561041f57600080fd5b506001546103fb906001600160a01b031681565b34801561043f57600080fd5b5061022961044e366004611a25565b610ea7565b34801561045f57600080fd5b506103fb61046e366004611b53565b610f0f565b34801561047f57600080fd5b5061021161048e366004611b38565b610fbb565b34801561049f57600080fd5b506102116104ae366004611873565b610fe5565b3480156104bf57600080fd5b506102116104ce366004611b9a565b61111c565b3480156104df57600080fd5b506102be6104ee366004611873565b60046020526000908152604090205460ff1681565b610211610511366004611bbc565b611280565b34801561052257600080fd5b5061022960075481565b34801561053857600080fd5b50610211610547366004611b38565b611487565b34801561055857600080fd5b50610229610567366004611873565b6114fd565b610574611543565b60008054911515600160a01b0260ff60a01b19909216919091179055565b60006105a061056783610ea7565b92915050565b600081815260056020526040902060018101546001600160a01b031633146106215760405162461bcd60e51b8152602060048201526024808201527f4f6e6c792074686520626f72726f7765722063616e20726570617920746865206044820152633637b0b760e11b60648201526084015b60405180910390fd5b6002810154348111156106845760405162461bcd60e51b815260206004820152602560248201527f496e73756666696369656e7420616d6f756e7420746f20636f76657220746865604482015264103637b0b760d91b6064820152608401610618565b803411156106c457336108fc61069a8334611c3f565b6040518115909202916000818181858888f193505050501580156106c2573d6000803e3d6000fd5b505b6001808301546001600160a01b03166000908152600360208190526040822090850154928101805491939290916106fc908490611c3f565b9091555050600084815260056020819052604080832080546001600160a01b03199081168255600180830180549092169091556002820185905560038083018690556004808401879055929094019490945592549186015490516323b872dd60e01b81526001600160a01b039092169283926323b872dd9261078392309233929101611c52565b6020604051808303816000875af11580156107a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c69190611c76565b6108125760405162461bcd60e51b815260206004820152601860248201527f436f6c6c61746572616c2072657475726e206661696c656400000000000000006044820152606401610618565b5050505050565b6000818152600560205260409020546001600160a01b0316331461087f5760405162461bcd60e51b815260206004820152601a60248201527f4f6e6c79206c656e646572732063616e206c69717569646174650000000000006044820152606401610618565b6000818152600560205260409020600401544211156109cf5760008181526005602090815260408083206003808201546001928301546001600160a01b031686529352908320018054919290916108d7908490611c3f565b9091555050600154600754600090815260056020526040908190206003015490516323b872dd60e01b81526001600160a01b039092169182916323b872dd91610927913091339190600401611c52565b6020604051808303816000875af1158015610946573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096a9190611c76565b6109865760405162461bcd60e51b815260040161061890611c93565b506007546000908152600560208190526040822080546001600160a01b031990811682556001820180549091169055600281018390556003810183905560048101839055015550565b600754600090815260056020819052604090912001546109ed61159d565b10610a455760405162461bcd60e51b815260206004820152602260248201527f4c69717569646174696f6e207468726573686f6c64206e6f7420627265616368604482015261195960f21b6064820152608401610618565b60008181526005602090815260408083206003808201546001928301546001600160a01b031686529352908320018054919290916108d7908490611c3f565b50565b600054600160a01b900460ff1615610ab15760405162461bcd60e51b815260040161061890611cbd565b84341015610b015760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f756768204554482070726f76696465640000000000000000006044820152606401610618565b6064831115610b5c5760405162461bcd60e51b815260206004820152602160248201527f50756e6973686d656e74206665652063616e6e6f7420657863656564203130306044820152601760f91b6064820152608401610618565b6064821115610bb95760405162461bcd60e51b815260206004820152602360248201527f436f6c6c61746572616c20726174696f206d7573742062652062656c6f77203160448201526218181760e91b6064820152608401610618565b6001821015610c1a5760405162461bcd60e51b815260206004820152602760248201527f436f6c6c61746572616c20726174696f206d75737420626520686967686572206044820152663a3430b710189760c91b6064820152608401610618565b6040805160e0810182528781526020808201888152828401888152606084018881526080850188815260a086018881523360c08801526006546000908152600280885298902087518155945160018601559251968401969096555160038301559351600482015592518051929384939092610c9c9260058501929101906117f9565b5060c09190910151600691820180546001600160a01b0319166001600160a01b039092169190911790558054906000610cd483611ce9565b919050555050505050505050565b600054600160a01b900460ff1615610d0c5760405162461bcd60e51b815260040161061890611cbd565b60008111610d685760405162461bcd60e51b815260206004820152602360248201527f616d6f756e74206e6565647320746f20626520686967686572207468616e207a60448201526265726f60e81b6064820152608401610618565b336000908152600360205260409020600181015490548291610d8991611c3f565b11610dd65760405162461bcd60e51b815260206004820152601f60248201527f4e6f7420656e6f75676820617661696c61626c6520636f6c6c61746572616c006044820152606401610618565b3360009081526003602052604081208054839290610df5908490611c3f565b90915550506001546040516323b872dd60e01b81526001600160a01b039091169081906323b872dd90610e3090309033908790600401611c52565b6020604051808303816000875af1158015610e4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e739190611c76565b610e8f5760405162461bcd60e51b815260040161061890611c93565b5050565b610e9b611543565b610ea56000611628565b565b60007f95f4708e4625fc985c8cdd51b0461caca418c7b9c27674f22309db0677cc29638260000151836020015184606001518560800151604051602001610ef2959493929190611d02565b604051602081830303815290604052805190602001209050919050565b6000806000806000610f20876114fd565b602087015160408801516060890151919650945060001a92509050601b821015610f5257610f4f601b83611d75565b91505b60408051600081526020810180835283905260ff841691810191909152606081018590526080810184905260019060a0016020604051602081039080840390855afa158015610fa5573d6000803e3d6000fd5b5050604051601f19015198975050505050505050565b610fc3611543565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600054600160a01b900460ff161561100f5760405162461bcd60e51b815260040161061890611cbd565b6000811161105f5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610618565b6001546040516323b872dd60e01b81526001600160a01b039091169081906323b872dd9061109590339030908790600401611c52565b6020604051808303816000875af11580156110b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d89190611c76565b6110f45760405162461bcd60e51b815260040161061890611c93565b3360009081526003602052604081208054849290611113908490611d8e565b90915550505050565b600054600160a01b900460ff16156111465760405162461bcd60e51b815260040161061890611cbd565b600082815260026020526040902060068101546001600160a01b031633146111c25760405162461bcd60e51b815260206004820152602960248201527f4f6e6c792074686520706f6f6c206f776e65722063616e2077697468647261776044820152681031b0b834ba30b61760b91b6064820152608401610618565b80600101548211156112255760405162461bcd60e51b815260206004820152602660248201527f57697468647261776c2072657175657374206578636565647320706f6f6c206160448201526536b7bab73a1760d11b6064820152608401610618565b818160010160008282546112399190611c3f565b909155505060068101546040516001600160a01b039091169083156108fc029084906000818181858888f1935050505015801561127a573d6000803e3d6000fd5b50505050565b600061128b84610ea7565b905060006112998285610f0f565b905084606001516001600160a01b0316816001600160a01b0316146112f35760405162461bcd60e51b815260206004820152601060248201526f4976616c6964207369676e617475726560801b6044820152606401610618565b60008381526002602090815260408220600401549087015160649161131791611da1565b6113219190611db8565b6060870180516001600160a01b0390811660009081526003602052604080822060010154935190921681522054919250829161135d9190611c3f565b10156113a35760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da0818dbdb1b185d195c985b605a1b6044820152606401610618565b6113ac83611678565b6113b78682866116e2565b6020860151604051339180156108fc02916000818181858888f193505050501580156113e7573d6000803e3d6000fd5b5060015486516040516323b872dd60e01b81526001600160a01b039092169182916323b872dd9161141f913391309190600401611c52565b6020604051808303816000875af115801561143e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114629190611c76565b61147e5760405162461bcd60e51b815260040161061890611c93565b50505050505050565b61148f611543565b6001600160a01b0381166114f45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610618565b610a8481611628565b60405161190160f01b60208201527f0000000000000000000000000000000000000000000000000000000000000000602282015260428101829052600090606201610ef2565b6000546001600160a01b03163314610ea55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610618565b60008073d4a33860578de61dbabdc8bfdb98fd742fa7028e905060008190506000816001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116209190611dda565b949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008181526004602052604090205460ff16156116c75760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21027b93232b960991b6044820152606401610618565b6000908152600460205260409020805460ff19166001179055565b6007805460009081526005602081815260408084208054336001600160a01b03199182161790915560608901518654865282862060010180549092166001600160a01b039091161790558751855485528185206002908101919091558554855281852060039081018990558786528184528286208083015497548752948452918520600401959095559285905292909252015460649061178061159d565b61178a9190611da1565b6117949190611db8565b60075460009081526005602081815260408084209092019390935560608601516001600160a01b03168252600390925290812060010180548492906117da908490611d8e565b9091555050600780549060006117ef83611ce9565b9190505550505050565b82805482825590600052602060002090810192821561184e579160200282015b8281111561184e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611819565b5061185a92915061185e565b5090565b5b8082111561185a576000815560010161185f565b60006020828403121561188557600080fd5b5035919050565b8015158114610a8457600080fd5b6000602082840312156118ac57600080fd5b81356118b78161188c565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156118fd576118fd6118be565b604052919050565b80356001600160a01b038116811461191c57600080fd5b919050565b600082601f83011261193257600080fd5b813567ffffffffffffffff81111561194c5761194c6118be565b61195f601f8201601f19166020016118d4565b81815284602083860101111561197457600080fd5b816020850160208301376000918101602001919091529392505050565b600060a082840312156119a357600080fd5b60405160a0810167ffffffffffffffff82821081831117156119c7576119c76118be565b816040528293508435835260208501356020840152604085013560408401526119f260608601611905565b60608401526080850135915080821115611a0b57600080fd5b50611a1885828601611921565b6080830152505092915050565b600060208284031215611a3757600080fd5b813567ffffffffffffffff811115611a4e57600080fd5b61162084828501611991565b60008060008060008060c08789031215611a7357600080fd5b86359550602080880135955060408801359450606088013593506080880135925060a088013567ffffffffffffffff80821115611aaf57600080fd5b818a0191508a601f830112611ac357600080fd5b813581811115611ad557611ad56118be565b8060051b9150611ae68483016118d4565b818152918301840191848101908d841115611b0057600080fd5b938501935b83851015611b2557611b1685611905565b82529385019390850190611b05565b8096505050505050509295509295509295565b600060208284031215611b4a57600080fd5b6118b782611905565b60008060408385031215611b6657600080fd5b82359150602083013567ffffffffffffffff811115611b8457600080fd5b611b9085828601611921565b9150509250929050565b60008060408385031215611bad57600080fd5b50508035926020909101359150565b600080600060608486031215611bd157600080fd5b833567ffffffffffffffff80821115611be957600080fd5b611bf587838801611991565b94506020860135915080821115611c0b57600080fd5b50611c1886828701611921565b925050604084013590509250925092565b634e487b7160e01b600052601160045260246000fd5b818103818111156105a0576105a0611c29565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215611c8857600080fd5b81516118b78161188c565b60208082526010908201526f2a3930b739b332b9103330b4b632b21760811b604082015260600190565b60208082526012908201527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b604082015260600190565b600060018201611cfb57611cfb611c29565b5060010190565b85815260006020868184015285604084015260018060a01b038516606084015260a0608084015283518060a085015260005b81811015611d505785810183015185820160c001528201611d34565b50600060c0828601015260c0601f19601f830116850101925050509695505050505050565b60ff81811683821601908111156105a0576105a0611c29565b808201808211156105a0576105a0611c29565b80820281158282048414176105a0576105a0611c29565b600082611dd557634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611dec57600080fd5b505191905056fea2646970667358221220bf62aca86523defe9b74b92bb7176fb5d0f81b994de4abbeb90338ec7b1cd2b264736f6c63430008110033",
  "deployedBytecode": "0x60806040526004361061014f5760003560e01c80638da5cb5b116100b6578063bcee2d421161006f578063bcee2d42146104b3578063c3124c4d146104d3578063e880f7cd14610503578063ec21386514610516578063f2fde38b1461052c578063fa5408011461054c57600080fd5b80638da5cb5b146103e15780638e96066f146104135780638f07e7f71461043357806397aba7f914610453578063aaf5bfc314610473578063bad4a01f1461049357600080fd5b80634c88bc95116101085780634c88bc951461028a5780635c975abb1461029d578063605300e7146102ce5780636112fe2e14610317578063715018a6146103375780638a9ad7661461034c57600080fd5b80630658f4951461015b57806316c38b3c146101f157806318e5613114610213578063370bad1114610237578063371fd8e614610257578063415f12401461026a57600080fd5b3661015657005b600080fd5b34801561016757600080fd5b506101b6610176366004611873565b600260208190526000918252604090912080546001820154928201546003830154600484015460069094015492949391929091906001600160a01b031686565b60408051968752602087019590955293850192909252606084015260808301526001600160a01b031660a082015260c0015b60405180910390f35b3480156101fd57600080fd5b5061021161020c36600461189a565b61056c565b005b34801561021f57600080fd5b5061022960065481565b6040519081526020016101e8565b34801561024357600080fd5b50610229610252366004611a25565b610592565b610211610265366004611873565b6105a6565b34801561027657600080fd5b50610211610285366004611873565b610819565b610211610298366004611a5a565b610a87565b3480156102a957600080fd5b506000546102be90600160a01b900460ff1681565b60405190151581526020016101e8565b3480156102da57600080fd5b506103026102e9366004611b38565b6003602052600090815260409020805460019091015482565b604080519283526020830191909152016101e8565b34801561032357600080fd5b50610211610332366004611873565b610ce2565b34801561034357600080fd5b50610211610e93565b34801561035857600080fd5b506103a9610367366004611873565b60056020819052600091825260409091208054600182015460028301546003840154600485015494909501546001600160a01b03938416959290931693909286565b604080516001600160a01b039788168152969095166020870152938501929092526060840152608083015260a082015260c0016101e8565b3480156103ed57600080fd5b506000546001600160a01b03165b6040516001600160a01b0390911681526020016101e8565b34801561041f57600080fd5b506001546103fb906001600160a01b031681565b34801561043f57600080fd5b5061022961044e366004611a25565b610ea7565b34801561045f57600080fd5b506103fb61046e366004611b53565b610f0f565b34801561047f57600080fd5b5061021161048e366004611b38565b610fbb565b34801561049f57600080fd5b506102116104ae366004611873565b610fe5565b3480156104bf57600080fd5b506102116104ce366004611b9a565b61111c565b3480156104df57600080fd5b506102be6104ee366004611873565b60046020526000908152604090205460ff1681565b610211610511366004611bbc565b611280565b34801561052257600080fd5b5061022960075481565b34801561053857600080fd5b50610211610547366004611b38565b611487565b34801561055857600080fd5b50610229610567366004611873565b6114fd565b610574611543565b60008054911515600160a01b0260ff60a01b19909216919091179055565b60006105a061056783610ea7565b92915050565b600081815260056020526040902060018101546001600160a01b031633146106215760405162461bcd60e51b8152602060048201526024808201527f4f6e6c792074686520626f72726f7765722063616e20726570617920746865206044820152633637b0b760e11b60648201526084015b60405180910390fd5b6002810154348111156106845760405162461bcd60e51b815260206004820152602560248201527f496e73756666696369656e7420616d6f756e7420746f20636f76657220746865604482015264103637b0b760d91b6064820152608401610618565b803411156106c457336108fc61069a8334611c3f565b6040518115909202916000818181858888f193505050501580156106c2573d6000803e3d6000fd5b505b6001808301546001600160a01b03166000908152600360208190526040822090850154928101805491939290916106fc908490611c3f565b9091555050600084815260056020819052604080832080546001600160a01b03199081168255600180830180549092169091556002820185905560038083018690556004808401879055929094019490945592549186015490516323b872dd60e01b81526001600160a01b039092169283926323b872dd9261078392309233929101611c52565b6020604051808303816000875af11580156107a2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906107c69190611c76565b6108125760405162461bcd60e51b815260206004820152601860248201527f436f6c6c61746572616c2072657475726e206661696c656400000000000000006044820152606401610618565b5050505050565b6000818152600560205260409020546001600160a01b0316331461087f5760405162461bcd60e51b815260206004820152601a60248201527f4f6e6c79206c656e646572732063616e206c69717569646174650000000000006044820152606401610618565b6000818152600560205260409020600401544211156109cf5760008181526005602090815260408083206003808201546001928301546001600160a01b031686529352908320018054919290916108d7908490611c3f565b9091555050600154600754600090815260056020526040908190206003015490516323b872dd60e01b81526001600160a01b039092169182916323b872dd91610927913091339190600401611c52565b6020604051808303816000875af1158015610946573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061096a9190611c76565b6109865760405162461bcd60e51b815260040161061890611c93565b506007546000908152600560208190526040822080546001600160a01b031990811682556001820180549091169055600281018390556003810183905560048101839055015550565b600754600090815260056020819052604090912001546109ed61159d565b10610a455760405162461bcd60e51b815260206004820152602260248201527f4c69717569646174696f6e207468726573686f6c64206e6f7420627265616368604482015261195960f21b6064820152608401610618565b60008181526005602090815260408083206003808201546001928301546001600160a01b031686529352908320018054919290916108d7908490611c3f565b50565b600054600160a01b900460ff1615610ab15760405162461bcd60e51b815260040161061890611cbd565b84341015610b015760405162461bcd60e51b815260206004820152601760248201527f4e6f7420656e6f756768204554482070726f76696465640000000000000000006044820152606401610618565b6064831115610b5c5760405162461bcd60e51b815260206004820152602160248201527f50756e6973686d656e74206665652063616e6e6f7420657863656564203130306044820152601760f91b6064820152608401610618565b6064821115610bb95760405162461bcd60e51b815260206004820152602360248201527f436f6c6c61746572616c20726174696f206d7573742062652062656c6f77203160448201526218181760e91b6064820152608401610618565b6001821015610c1a5760405162461bcd60e51b815260206004820152602760248201527f436f6c6c61746572616c20726174696f206d75737420626520686967686572206044820152663a3430b710189760c91b6064820152608401610618565b6040805160e0810182528781526020808201888152828401888152606084018881526080850188815260a086018881523360c08801526006546000908152600280885298902087518155945160018601559251968401969096555160038301559351600482015592518051929384939092610c9c9260058501929101906117f9565b5060c09190910151600691820180546001600160a01b0319166001600160a01b039092169190911790558054906000610cd483611ce9565b919050555050505050505050565b600054600160a01b900460ff1615610d0c5760405162461bcd60e51b815260040161061890611cbd565b60008111610d685760405162461bcd60e51b815260206004820152602360248201527f616d6f756e74206e6565647320746f20626520686967686572207468616e207a60448201526265726f60e81b6064820152608401610618565b336000908152600360205260409020600181015490548291610d8991611c3f565b11610dd65760405162461bcd60e51b815260206004820152601f60248201527f4e6f7420656e6f75676820617661696c61626c6520636f6c6c61746572616c006044820152606401610618565b3360009081526003602052604081208054839290610df5908490611c3f565b90915550506001546040516323b872dd60e01b81526001600160a01b039091169081906323b872dd90610e3090309033908790600401611c52565b6020604051808303816000875af1158015610e4f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e739190611c76565b610e8f5760405162461bcd60e51b815260040161061890611c93565b5050565b610e9b611543565b610ea56000611628565b565b60007f95f4708e4625fc985c8cdd51b0461caca418c7b9c27674f22309db0677cc29638260000151836020015184606001518560800151604051602001610ef2959493929190611d02565b604051602081830303815290604052805190602001209050919050565b6000806000806000610f20876114fd565b602087015160408801516060890151919650945060001a92509050601b821015610f5257610f4f601b83611d75565b91505b60408051600081526020810180835283905260ff841691810191909152606081018590526080810184905260019060a0016020604051602081039080840390855afa158015610fa5573d6000803e3d6000fd5b5050604051601f19015198975050505050505050565b610fc3611543565b600180546001600160a01b0319166001600160a01b0392909216919091179055565b600054600160a01b900460ff161561100f5760405162461bcd60e51b815260040161061890611cbd565b6000811161105f5760405162461bcd60e51b815260206004820152601d60248201527f416d6f756e74206d7573742062652067726561746572207468616e20300000006044820152606401610618565b6001546040516323b872dd60e01b81526001600160a01b039091169081906323b872dd9061109590339030908790600401611c52565b6020604051808303816000875af11580156110b4573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110d89190611c76565b6110f45760405162461bcd60e51b815260040161061890611c93565b3360009081526003602052604081208054849290611113908490611d8e565b90915550505050565b600054600160a01b900460ff16156111465760405162461bcd60e51b815260040161061890611cbd565b600082815260026020526040902060068101546001600160a01b031633146111c25760405162461bcd60e51b815260206004820152602960248201527f4f6e6c792074686520706f6f6c206f776e65722063616e2077697468647261776044820152681031b0b834ba30b61760b91b6064820152608401610618565b80600101548211156112255760405162461bcd60e51b815260206004820152602660248201527f57697468647261776c2072657175657374206578636565647320706f6f6c206160448201526536b7bab73a1760d11b6064820152608401610618565b818160010160008282546112399190611c3f565b909155505060068101546040516001600160a01b039091169083156108fc029084906000818181858888f1935050505015801561127a573d6000803e3d6000fd5b50505050565b600061128b84610ea7565b905060006112998285610f0f565b905084606001516001600160a01b0316816001600160a01b0316146112f35760405162461bcd60e51b815260206004820152601060248201526f4976616c6964207369676e617475726560801b6044820152606401610618565b60008381526002602090815260408220600401549087015160649161131791611da1565b6113219190611db8565b6060870180516001600160a01b0390811660009081526003602052604080822060010154935190921681522054919250829161135d9190611c3f565b10156113a35760405162461bcd60e51b8152602060048201526015602482015274139bdd08195b9bdd59da0818dbdb1b185d195c985b605a1b6044820152606401610618565b6113ac83611678565b6113b78682866116e2565b6020860151604051339180156108fc02916000818181858888f193505050501580156113e7573d6000803e3d6000fd5b5060015486516040516323b872dd60e01b81526001600160a01b039092169182916323b872dd9161141f913391309190600401611c52565b6020604051808303816000875af115801561143e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114629190611c76565b61147e5760405162461bcd60e51b815260040161061890611c93565b50505050505050565b61148f611543565b6001600160a01b0381166114f45760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610618565b610a8481611628565b60405161190160f01b60208201527f0000000000000000000000000000000000000000000000000000000000000000602282015260428101829052600090606201610ef2565b6000546001600160a01b03163314610ea55760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610618565b60008073d4a33860578de61dbabdc8bfdb98fd742fa7028e905060008190506000816001600160a01b03166350d25bcd6040518163ffffffff1660e01b8152600401602060405180830381865afa1580156115fc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906116209190611dda565b949350505050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b60008181526004602052604090205460ff16156116c75760405162461bcd60e51b815260206004820152600d60248201526c24b73b30b634b21027b93232b960991b6044820152606401610618565b6000908152600460205260409020805460ff19166001179055565b6007805460009081526005602081815260408084208054336001600160a01b03199182161790915560608901518654865282862060010180549092166001600160a01b039091161790558751855485528185206002908101919091558554855281852060039081018990558786528184528286208083015497548752948452918520600401959095559285905292909252015460649061178061159d565b61178a9190611da1565b6117949190611db8565b60075460009081526005602081815260408084209092019390935560608601516001600160a01b03168252600390925290812060010180548492906117da908490611d8e565b9091555050600780549060006117ef83611ce9565b9190505550505050565b82805482825590600052602060002090810192821561184e579160200282015b8281111561184e57825182546001600160a01b0319166001600160a01b03909116178255602090920191600190910190611819565b5061185a92915061185e565b5090565b5b8082111561185a576000815560010161185f565b60006020828403121561188557600080fd5b5035919050565b8015158114610a8457600080fd5b6000602082840312156118ac57600080fd5b81356118b78161188c565b9392505050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff811182821017156118fd576118fd6118be565b604052919050565b80356001600160a01b038116811461191c57600080fd5b919050565b600082601f83011261193257600080fd5b813567ffffffffffffffff81111561194c5761194c6118be565b61195f601f8201601f19166020016118d4565b81815284602083860101111561197457600080fd5b816020850160208301376000918101602001919091529392505050565b600060a082840312156119a357600080fd5b60405160a0810167ffffffffffffffff82821081831117156119c7576119c76118be565b816040528293508435835260208501356020840152604085013560408401526119f260608601611905565b60608401526080850135915080821115611a0b57600080fd5b50611a1885828601611921565b6080830152505092915050565b600060208284031215611a3757600080fd5b813567ffffffffffffffff811115611a4e57600080fd5b61162084828501611991565b60008060008060008060c08789031215611a7357600080fd5b86359550602080880135955060408801359450606088013593506080880135925060a088013567ffffffffffffffff80821115611aaf57600080fd5b818a0191508a601f830112611ac357600080fd5b813581811115611ad557611ad56118be565b8060051b9150611ae68483016118d4565b818152918301840191848101908d841115611b0057600080fd5b938501935b83851015611b2557611b1685611905565b82529385019390850190611b05565b8096505050505050509295509295509295565b600060208284031215611b4a57600080fd5b6118b782611905565b60008060408385031215611b6657600080fd5b82359150602083013567ffffffffffffffff811115611b8457600080fd5b611b9085828601611921565b9150509250929050565b60008060408385031215611bad57600080fd5b50508035926020909101359150565b600080600060608486031215611bd157600080fd5b833567ffffffffffffffff80821115611be957600080fd5b611bf587838801611991565b94506020860135915080821115611c0b57600080fd5b50611c1886828701611921565b925050604084013590509250925092565b634e487b7160e01b600052601160045260246000fd5b818103818111156105a0576105a0611c29565b6001600160a01b039384168152919092166020820152604081019190915260600190565b600060208284031215611c8857600080fd5b81516118b78161188c565b60208082526010908201526f2a3930b739b332b9103330b4b632b21760811b604082015260600190565b60208082526012908201527110dbdb9d1c9858dd081a5cc81c185d5cd95960721b604082015260600190565b600060018201611cfb57611cfb611c29565b5060010190565b85815260006020868184015285604084015260018060a01b038516606084015260a0608084015283518060a085015260005b81811015611d505785810183015185820160c001528201611d34565b50600060c0828601015260c0601f19601f830116850101925050509695505050505050565b60ff81811683821601908111156105a0576105a0611c29565b808201808211156105a0576105a0611c29565b80820281158282048414176105a0576105a0611c29565b600082611dd557634e487b7160e01b600052601260045260246000fd5b500490565b600060208284031215611dec57600080fd5b505191905056fea2646970667358221220bf62aca86523defe9b74b92bb7176fb5d0f81b994de4abbeb90338ec7b1cd2b264736f6c63430008110033",
  "devdoc": {
    "kind": "dev",
    "methods": {
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 7,
        "contract": "contracts/IntentBoost.sol:intentBoost",
        "label": "_owner",
        "offset": 0,
        "slot": "0",
        "type": "t_address"
      },
      {
        "astId": 159,
        "contract": "contracts/IntentBoost.sol:intentBoost",
        "label": "paused",
        "offset": 20,
        "slot": "0",
        "type": "t_bool"
      },
      {
        "astId": 206,
        "contract": "contracts/IntentBoost.sol:intentBoost",
        "label": "lockUSDC",
        "offset": 0,
        "slot": "1",
        "type": "t_address"
      },
      {
        "astId": 211,
        "contract": "contracts/IntentBoost.sol:intentBoost",
        "label": "lendingPools",
        "offset": 0,
        "slot": "2",
        "type": "t_mapping(t_uint256,t_struct(LendingPool)175_storage)"
      },
      {
        "astId": 216,
        "contract": "contracts/IntentBoost.sol:intentBoost",
        "label": "poolBorrowers",
        "offset": 0,
        "slot": "3",
        "type": "t_mapping(t_address,t_struct(borrowers)180_storage)"
      },
      {
        "astId": 220,
        "contract": "contracts/IntentBoost.sol:intentBoost",
        "label": "invalidatedOrders",
        "offset": 0,
        "slot": "4",
        "type": "t_mapping(t_bytes32,t_bool)"
      },
      {
        "astId": 225,
        "contract": "contracts/IntentBoost.sol:intentBoost",
        "label": "liquidationMarkets",
        "offset": 0,
        "slot": "5",
        "type": "t_mapping(t_uint256,t_struct(liquidationMarket)204_storage)"
      },
      {
        "astId": 227,
        "contract": "contracts/IntentBoost.sol:intentBoost",
        "label": "nextPoolId",
        "offset": 0,
        "slot": "6",
        "type": "t_uint256"
      },
      {
        "astId": 229,
        "contract": "contracts/IntentBoost.sol:intentBoost",
        "label": "nextMarket",
        "offset": 0,
        "slot": "7",
        "type": "t_uint256"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_address)dyn_storage": {
        "base": "t_address",
        "encoding": "dynamic_array",
        "label": "address[]",
        "numberOfBytes": "32"
      },
      "t_bool": {
        "encoding": "inplace",
        "label": "bool",
        "numberOfBytes": "1"
      },
      "t_bytes32": {
        "encoding": "inplace",
        "label": "bytes32",
        "numberOfBytes": "32"
      },
      "t_mapping(t_address,t_struct(borrowers)180_storage)": {
        "encoding": "mapping",
        "key": "t_address",
        "label": "mapping(address => struct intentBoost.borrowers)",
        "numberOfBytes": "32",
        "value": "t_struct(borrowers)180_storage"
      },
      "t_mapping(t_bytes32,t_bool)": {
        "encoding": "mapping",
        "key": "t_bytes32",
        "label": "mapping(bytes32 => bool)",
        "numberOfBytes": "32",
        "value": "t_bool"
      },
      "t_mapping(t_uint256,t_struct(LendingPool)175_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct intentBoost.LendingPool)",
        "numberOfBytes": "32",
        "value": "t_struct(LendingPool)175_storage"
      },
      "t_mapping(t_uint256,t_struct(liquidationMarket)204_storage)": {
        "encoding": "mapping",
        "key": "t_uint256",
        "label": "mapping(uint256 => struct intentBoost.liquidationMarket)",
        "numberOfBytes": "32",
        "value": "t_struct(liquidationMarket)204_storage"
      },
      "t_struct(LendingPool)175_storage": {
        "encoding": "inplace",
        "label": "struct intentBoost.LendingPool",
        "members": [
          {
            "astId": 161,
            "contract": "contracts/IntentBoost.sol:intentBoost",
            "label": "interestRate",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 163,
            "contract": "contracts/IntentBoost.sol:intentBoost",
            "label": "capital",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          },
          {
            "astId": 165,
            "contract": "contracts/IntentBoost.sol:intentBoost",
            "label": "loanDuration",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 167,
            "contract": "contracts/IntentBoost.sol:intentBoost",
            "label": "liquidationThreshold",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 169,
            "contract": "contracts/IntentBoost.sol:intentBoost",
            "label": "collateralRatio",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 172,
            "contract": "contracts/IntentBoost.sol:intentBoost",
            "label": "whitelist",
            "offset": 0,
            "slot": "5",
            "type": "t_array(t_address)dyn_storage"
          },
          {
            "astId": 174,
            "contract": "contracts/IntentBoost.sol:intentBoost",
            "label": "owner",
            "offset": 0,
            "slot": "6",
            "type": "t_address"
          }
        ],
        "numberOfBytes": "224"
      },
      "t_struct(borrowers)180_storage": {
        "encoding": "inplace",
        "label": "struct intentBoost.borrowers",
        "members": [
          {
            "astId": 177,
            "contract": "contracts/IntentBoost.sol:intentBoost",
            "label": "collateral",
            "offset": 0,
            "slot": "0",
            "type": "t_uint256"
          },
          {
            "astId": 179,
            "contract": "contracts/IntentBoost.sol:intentBoost",
            "label": "lockedCollateral",
            "offset": 0,
            "slot": "1",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(liquidationMarket)204_storage": {
        "encoding": "inplace",
        "label": "struct intentBoost.liquidationMarket",
        "members": [
          {
            "astId": 193,
            "contract": "contracts/IntentBoost.sol:intentBoost",
            "label": "lender",
            "offset": 0,
            "slot": "0",
            "type": "t_address"
          },
          {
            "astId": 195,
            "contract": "contracts/IntentBoost.sol:intentBoost",
            "label": "borrower",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 197,
            "contract": "contracts/IntentBoost.sol:intentBoost",
            "label": "borrowedETH",
            "offset": 0,
            "slot": "2",
            "type": "t_uint256"
          },
          {
            "astId": 199,
            "contract": "contracts/IntentBoost.sol:intentBoost",
            "label": "lockedColalteral",
            "offset": 0,
            "slot": "3",
            "type": "t_uint256"
          },
          {
            "astId": 201,
            "contract": "contracts/IntentBoost.sol:intentBoost",
            "label": "loanDuration",
            "offset": 0,
            "slot": "4",
            "type": "t_uint256"
          },
          {
            "astId": 203,
            "contract": "contracts/IntentBoost.sol:intentBoost",
            "label": "liquidationPrice",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}